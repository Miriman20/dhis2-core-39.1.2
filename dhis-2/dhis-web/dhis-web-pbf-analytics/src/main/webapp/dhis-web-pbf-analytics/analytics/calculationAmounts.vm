<script type="text/javascript">
	jQuery(document).ready(function(){	
	
	});

	var i18n_confirm_delete = '$encoder.jsEscape( $i18n.getString( "confirm_delete_data_element" ) , "'")';
	var i18n_none = '$encoder.jsEscape( $i18n.getString( "none" ) , "'")';
	var i18n_yes = '$encoder.jsEscape( $i18n.getString( "yes" ) , "'")';
	var i18n_no = '$encoder.jsEscape( $i18n.getString( "no" ) , "'")';
	var i18n_number = '$encoder.jsEscape( $i18n.getString( "number" ) , "'")';
	var i18n_yes_only = '$encoder.jsEscape( $i18n.getString( "yes_only" ) , "'")';
	var i18n_yes_no = '$encoder.jsEscape( $i18n.getString( "yes_no" ) , "'")';
	var i18n_text = '$encoder.jsEscape( $i18n.getString( "text" ) , "'")';
	var i18n_date = '$encoder.jsEscape( $i18n.getString( "date" ) , "'")';	
	var i18n_user_name = '$encoder.jsEscape( $i18n.getString( "user_name" ) , "'")';	
	var i18n_sum = '$encoder.jsEscape( $i18n.getString( "sum" ) , "'")';
	var i18n_average = '$encoder.jsEscape( $i18n.getString( "average" ) , "'")';
	var i18n_aggregate = '$encoder.jsEscape( $i18n.getString( "aggregate" ) , "'")';
	var i18n_patient = '$encoder.jsEscape( $i18n.getString( "patient" ) , "'")';
	var i18n_translation_translate = '$encoder.jsEscape( $i18n.getString( "translation_translate" ) , "'")';
	var i18n_edit = '$encoder.jsEscape( $i18n.getString( "edit" ) , "'")';
	var i18n_remove = '$encoder.jsEscape( $i18n.getString( "remove" ) , "'")';
	var i18n_show_details = '$encoder.jsEscape( $i18n.getString( "show_details" ) , "'")';
	var i18n_name = '$encoder.jsEscape( $i18n.getString( "name" ) , "'")';
	var i18n_operations = '$encoder.jsEscape( $i18n.getString( "operations" ) , "'")';
</script>


<script type="text/javascript">
  function exportTableToExcel(filename = ''){
var downloadLink;
var dataType = 'application/vnd.ms-excel';
var tableSelect = document.getElementById("data-table");
var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

filename = filename?filename+'.xls':'excel_data.xls';
downloadLink = document.createElement("a");

document.body.appendChild(downloadLink);

if(navigator.msSaveOrOpenBlob){
var blob = new Blob(['\ufeff', tableHTML], {
  type: dataType
});
navigator.msSaveOrOpenBlob( blob, filename);
}else{

downloadLink.href = 'data:' + dataType + ', ' + tableHTML;

downloadLink.download = filename;

downloadLink.click();
}
}
  </script>
  
<!--h3>$i18n.getString( "report_period_management" ) #openHelp( "pbfreport" )</h3-->

        <style>
            body {font-family: Verdana;}

            .c3-line, .c3-focused {stroke-width: 3px !important;}
            .c3-bar {stroke: white !important; stroke-width: 1;}
            .c3 text { font-size: 12px; color: grey;}
            .tick line {stroke: white;}
            .c3-axis path {stroke: grey;}
            .c3-circle { opacity: 1 !important; }
            .c3-xgrid-focus {visibility: hidden !important;}
        </style>
		
<div class="form-group">
  <label for="files">Файлро барои таҳлил интихоб намоед:</label>
  <input type="file" id="files"  class="form-control" accept=".csv" required />
  <button type="button" name="" onclick="exportTableToExcel('')">Барориш ба Эксел</button>
  
</div>
<!--div class="form-group">
 <button type="button" id="submit" class="btn btn-primary">Иҷроиш</button>
 </div-->

        <script type="text/javascript">

  function handleFileSelect(evt) {
    var file = evt.target.files[0];

    var derivers = $.pivotUtilities.derivers;
    var renderers = $.extend(
            $.pivotUtilities.renderers,
            $.pivotUtilities.plotly_renderers,
            $.pivotUtilities.d3_renderers,
            $.pivotUtilities.export_renderers
            );
			
    Papa.parse(file, {
            download: true,
            skipEmptyLines: true,
            complete: function(parsed){
                $("#output").pivotUI(parsed.data, {
				renderers: renderers,
                    rows: ["Вилоят"],
                    cols: ["Сол"],
                aggregatorName: "Integer Sum",
                vals: ["Арзиш"],
                rendererName: "Heatmap"
				});
            }
        });
  }  
  
  $(document).ready(function(){
    $("#files").change(handleFileSelect);
	console.log( "ready!" );
  });

        </script>

        <div id="output" style="margin: 30px; display: inline-block"></div>
		
		
		
		
       <script type="text/javascript">
    // This example adds Plotly chart renderers.

    $(function(){

        var derivers = $.pivotUtilities.derivers;
        var renderers = $.extend($.pivotUtilities.renderers,
            $.pivotUtilities.plotly_renderers);

		var queryParams = {qtrPeriod: "1324234"};

        $.getJSON("getCalculationAmounts.action", queryParams, function(mps) {
            $("#output").pivotUI(mps, {
                renderers: renderers,
                rows: ["Мамлакат", "Вилоят", "Ноҳия", "Муассиса"], cols: ["Нишондиҳанда"],
				aggregatorName: "Integer Sum",
                vals: ["Арзиш"],
                rendererName: "Heatmap"
            });
        });
     });
        </script>
